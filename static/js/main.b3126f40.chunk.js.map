{"version":3,"sources":["ToDoList.jsx","App.jsx","index.js"],"names":["ToDoList","props","className","Tooltip","title","onClick","onSelect","id","text","App","myListFromLS","JSON","parse","window","localStorage","getItem","setItem","stringify","useState","listItem","setListItem","itemArr","setItemArr","useEffect","deleteFunc","oldArr","splice","type","placeholder","onChange","event","target","value","map","itemVal","index","key","dummy","document","createElement","body","appendChild","toString","select","execCommand","removeChild","toast","success","position","autoClose","ReactDOM","render","getElementById"],"mappings":"8PAsBeA,EAlBE,SAACC,GAGd,OACA,oCACI,yBAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAASC,MAAM,eACf,kBAAC,IAAD,CAAWF,UAAU,cACjBG,QAAS,WAAQJ,EAAMK,SAASL,EAAMM,QAG1C,4BAAKN,EAAMO,S,QCkGRC,G,MA1GH,WAER,IAAIC,EAAeC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAEtC,OAAjBL,IACCG,OAAOC,aAAaE,QAAQ,SAAUL,KAAKM,UAAU,KACrDP,EAAeC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,YAN7C,MASmBG,mBAAS,IAT5B,mBASNC,EATM,KASIC,EATJ,OAUmBF,mBAASR,GAV5B,mBAUNW,EAVM,KAUGC,EAVH,KAYbC,qBAAU,WACNV,OAAOC,aAAaE,QAAQ,SAAUL,KAAKM,UAAUI,MACtD,CAACA,IAGJ,IAyBMG,EAAa,SAACjB,GAEhBe,GAAW,SAACG,GAER,OADAA,EAAOC,OAAOnB,EAAI,GACX,YAAKkB,OAoBpB,OACK,oCACD,yBAAKvB,UAAU,YACX,yBAAKA,UAAU,cACX,yCACA,6BACA,2BAAOyB,KAAK,OAAOC,YAAY,WAAWC,SAvDjC,SAACC,GACdV,EAAYU,EAAMC,OAAOC,QAsD6CA,MAAOb,IAEzE,kBAAChB,EAAA,EAAD,CAASC,MAAM,YACX,4BAAQF,UAAU,SAASG,QArD3B,WACZiB,GAAW,SAACG,GAER,MAAgB,KAAbN,EACO,GAAN,mBAAWM,GAAX,CAAmBN,IAEnB,YAAWM,MAGnBL,EAAY,MA4CA,QAGJ,4BACMC,EAAQY,KAAI,SAACC,EAASC,GAChB,OAAO,kBAAC,EAAD,CAEI3B,KAAY0B,EACZE,IAAYD,EACZ5B,GAAY4B,EACZ7B,SAAYkB,QAMnC,yBAAKtB,UAAY,UACb,kBAACC,EAAA,EAAD,CAASC,MAAM,aACX,yBAAKF,UAAY,UAAUG,QAzC9B,WACb,IAAIgC,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAML,MAAQX,EAAQqB,WACtBL,EAAMM,SACNL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,GAE1BS,IAAMC,QAAQ,4BACd,CAACC,SAAU,aACXC,UAAW,QA+BK,SAIJ,kBAAC,IAAD,YClGpBC,IAASC,OAAQ,kBAAC,EAAD,MAAWb,SAASc,eAAe,W","file":"static/js/main.b3126f40.chunk.js","sourcesContent":["import React from 'react';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst ToDoList = (props) =>{\r\n    \r\n    \r\n    return (\r\n    <>   \r\n        <div className=\"itemDiv\">\r\n            <Tooltip title=\"delete item\">\r\n            <ClearIcon className=\"fa fa-times\" \r\n                onClick={() => { props.onSelect(props.id); }\r\n                }/>\r\n            </Tooltip>    \r\n            <li>{props.text}</li> \r\n        </div>\r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default ToDoList;\r\n      ","import React, {useState, useEffect} from 'react';\r\nimport ToDoList from './ToDoList';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst App = () =>{\r\n    \r\n    var myListFromLS = JSON.parse(window.localStorage.getItem('myList'));     // LS = Local Storage\r\n    \r\n    if(myListFromLS === null){\r\n        window.localStorage.setItem('myList', JSON.stringify([]));               // just for creating a storage.     \r\n        myListFromLS = JSON.parse(window.localStorage.getItem('myList'));\r\n    }\r\n        \r\n    const [listItem, setListItem] = useState(\"\");\r\n    const [itemArr, setItemArr]   = useState(myListFromLS);\r\n    \r\n    useEffect(() =>{\r\n        window.localStorage.setItem('myList', JSON.stringify(itemArr));\r\n    }, [itemArr]);\r\n        \r\n    \r\n    const onchangeFunc = (event) =>{\r\n            setListItem(event.target.value);\r\n    };\r\n    \r\n    \r\n    const addItem = () =>{\r\n        setItemArr((oldArr) => {\r\n            \r\n            if(listItem !== \"\")\r\n                return([...oldArr, listItem]);\r\n            else\r\n                return([...oldArr]);\r\n            \r\n        });\r\n        setListItem(\"\");\r\n    };\r\n    /******* window.localStorage.setItem('myList', JSON.stringify(itemArr));  *******/\r\n//    const deleteFunc = (id) =>{\r\n//        setItemArr((oldArr) =>{\r\n//            return oldArr.filter((arrElem, index)=>{\r\n//                return index !== id;\r\n//            });   \r\n//        });\r\n//    };\r\n       \r\n    const deleteFunc = (id) =>{\r\n        \r\n        setItemArr((oldArr) =>{\r\n            oldArr.splice(id, 1);\r\n            return ([...oldArr]);\r\n        });\r\n        \r\n    };\r\n    /******* window.localStorage.setItem('myList', JSON.stringify(itemArr)); *******/\r\n    \r\n    const copyList = () =>{\r\n        var dummy = document.createElement(\"textArea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = itemArr.toString();\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        \r\n        toast.success('List copied successfully!', \r\n        {position: \"top-center\",\r\n        autoClose: 5000});\r\n    }\r\n    \r\n    \r\n    return(\r\n         <>\r\n        <div className=\"main-div\">\r\n            <div className=\"center-div\">\r\n                <h1>ToDo List</h1>\r\n                <br />\r\n                <input type=\"text\" placeholder=\"Add item\" onChange={onchangeFunc} value={listItem}></input>\r\n                \r\n                <Tooltip title=\"add item\">\r\n                    <button className=\"addBtn\" onClick={addItem}> + </button>\r\n                </Tooltip>    \r\n                \r\n                <ol>\r\n                    { itemArr.map((itemVal, index) =>{\r\n                            return <ToDoList\r\n                                       \r\n                                       text     = {itemVal}\r\n                                       key      = {index}\r\n                                       id       = {index}\r\n                                       onSelect = {deleteFunc}\r\n                                    \r\n                                       />;\r\n                    })}\r\n                </ol>\r\n                \r\n                <div className = \"footer\">\r\n                    <Tooltip title=\"copy list\">\r\n                        <div className = \"copyDiv\" onClick = {copyList}>\r\n                            COPY\r\n                        </div>\r\n                    </Tooltip>\r\n                    <ToastContainer/>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n        </>\r\n        \r\n    );\r\n};  \r\n\r\nexport default App;\r\n\r\n/*\r\nconst App = () =>{\r\n    \r\n    const [num, setNum] = useState(0);\r\n    \r\n    const change = (id) =>{\r\n        if(id == 1)\r\n            setNum(num+1);\r\n            \r\n        else{\r\n            if(num == 0){\r\n                setNum(0);\r\n                alert(\"Minimum is 0\");\r\n            }\r\n            else\r\n                setNum(num-1);\r\n        }\r\n    }\r\n    \r\n    return(\r\n    <>\r\n        <h1> {num} </h1>\r\n        <button onClick={() => {change(1)}}>increase</button>\r\n        <button onClick={() => {change(0)}}>decrease</button>\r\n    </>\r\n    );\r\n    \r\n};\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render( <App />  , document.getElementById('root') );\r\n\r\n\r\n/*\r\nconsole.log(window.localStorage.getItem('myList'));\r\n*/"],"sourceRoot":""}